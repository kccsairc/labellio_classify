#!/usr/bin/env python
# -*- coding: utf-8 -*-
from __future__ import print_function

import os

from labellio import Classifier, Config, ImageLoader, Label
from test import result


def main(args):
    model_dir = args.model_dir
    image_dir = args.image_dir
    network = args.network
    
    result(checkpoint_path="{}/model.ckpt-10000".format(model_dir),
                     model_name=network,
                     num_classes=131,
                     img_path=image_dir)


def mode_type(select):
    if select == "auto":
        return dict()
    elif select == "gpu":
        return dict(gpu=True)
    elif select == "cpu":
        return dict(cpu=True)
    else:
        raise RuntimeError("Invalid Argument")


def get_parser():
    import argparse

    parser = argparse.ArgumentParser(description="Labellio Classifier")
    parser.add_argument("model_dir", help="Path to a model directory which is exported from Labellio. (Please extract the archive before you use it.)")
    parser.add_argument("image_dir", help="Path to an image directory. The directory should contain only images.")
    parser.add_argument("network", help="Path to an image directory. The directory should contain only images.")

    return parser


if __name__ == "__main__":
    main(get_parser().parse_args())